<launch>

    <arg name="world_file"  default="$(find balrog_sim)/world/test_area.world"/>
    <param name="use_sim_time" value="true" />

    <arg name="base"      value="kobuki"/> <!-- create, roomba -->
    <arg name="battery"   value="/proc/acpi/battery/BAT0"/>  <!-- /proc/acpi/battery/BAT0 -->
    <arg name="gui" default="true"/>
    <arg name="stacks"    value="hexagons"/>  <!-- circles, hexagons -->
    <arg name="3d_sensor" value="astra"/>  <!-- kinect, asus_xtion_pro -->
    <arg name="scan_topic"  default="scan" />
    <arg name="base_frame"  default="base_footprint"/>
    <arg name="odom_frame"  default="odom"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="world_name" value="$(arg world_file)"/>
    </include>

    <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find balrog_sim)/robots/asl_turtlebot_custom_lidar.urdf.xacro'" />
    <param name="robot_description" command="$(arg urdf_file)" />

    <!-- Gazebo model spawner -->
    <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
          args="-x '0.5' -y '0.5' -Y '0.0' -unpause -urdf -param robot_description -model mobile_base"/>

    <!-- Velocity muxer -->
    <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
          args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
        <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
        <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
    </node>

    <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
    <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>

    <node pkg="tf" type="static_transform_publisher" name="camera_static_tf" args="0.0 0.0 .25 0.5 -0.5 0.5 -0.5 /mobile_base /camera_depth_optical_frame 100"/>
    <node pkg="tf" type="static_transform_publisher" name="footprint_static_tf" args="0.0 0.0 0.0 0.0 0.0 0.0 /base_footprint /mobile_base 100"/>

    <include file="$(find balrog_sim)/launch/manual_control.launch"></include>

    <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">

      <!-- Frame names -->
      <param name="map_frame" value="map" />
      <param name="base_frame" value="hokuyo_link" />
      <param name="odom_frame" value="hokuyo_link" />

      <param name="scan_topic" value="scan" />

      <!-- Tf use -->
      <param name="use_tf_pose_start_estimate" value="false" />
      <param name="pub_map_odom_transform" value="true" />

      <!-- Map size / start point -->
      <param name="map_resolution" value="0.050" />
      <param name="map_size" value="2048" />
      <param name="map_start_x" value="0.5" />
      <param name="map_start_y" value="0.5" />
      <param name="map_multi_res_levels" value="2" />

      <!-- Map update parameters -->
      <param name="update_factor_free" value="0.4"/>
      <param name="update_factor_occupied" value="0.9" />
      <param name="map_update_distance_thresh" value="0.4"/>
      <param name="map_update_angle_thresh" value="0.06" />
      <param name="laser_z_min_value" value = "-1.0" />
      <param name="laser_z_max_value" value = "1.0" />
    </node>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find balrog)/rviz/hector.rviz" />
</launch>
